<?php

namespace mmp\rjpBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ElectionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ElectionRepository extends EntityRepository
{
    /**
     * @param District[] $districts
     * @return array
     */
    public function findLastlyCouncilorsByDistricts($districts)
    {
        $em = $this->getEntityManager();
        $councilors = [];

        foreach ($districts as $district) {
            $councilors[$district->getId()] = [];

            // find last election in this district
            $election = $em->getRepository('mmpRjpBundle:Election')->createQueryBuilder('e')
                ->join('e.districts', 'd')
                ->where('d.id = :district')->setParameter(':district', $district)
                ->orderBy('e.date', ' DESC')
                ->setMaxResults(1)
                ->getQuery()
                ->getOneOrNullResult();

            if (null === $election) {
                continue;
            }

            // find candidates who are councilor in the district in this election
            $councilors[$district->getId()] = $em->getRepository('mmpRjpBundle:Councilor')->createQueryBuilder('co')
                ->join('co.candidate', 'ca')->addSelect('ca')
                ->join('ca.user', 'u')->addSelect('u')
                ->where('co.district = :district')->setParameter(':district', $district)
                ->andWhere('ca.election = :election')->setParameter(':election', $election)
                ->orderBy('u.last_name', 'ASC')
                ->getQuery()
                ->getResult();
        }

        return $councilors;
    }

    public function findAllWithDistricts() {
        $em = $this->getEntityManager();
        $elections = $this->findBy([], [
            'date' => 'desc'
        ]);

        foreach($elections as $election) {
            $districts = $election->getDistricts();

            foreach($districts as $district) {
                $qdb = $em->getRepository('mmpRjpBundle:Candidate')->createQueryBuilder('c');
                $qdb->join('c.user', 'u')->addSelect('u');
                $qdb->leftJoin('c.councilor', 'c2')->addSelect('c2');
                $qdb->where('c.district = :district AND c.election = :election');
                $qdb->setParameters([
                    'district' => $district->getId(),
                    'election' => $election->getId()
                ]);
                $qdb->orderBy('u.last_name', 'ASC');
                $qdb->groupBy('c.id');

                $candidates = $qdb->getQuery()->getResult();

                $district->addCandidatesOnElection(new \Doctrine\Common\Collections\ArrayCollection($candidates), $election);

            }
        }
        return $elections;
    }
}
